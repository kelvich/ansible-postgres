---

- name: ensure dependencies (Debian)
  apt: pkg={{item}} state=installed
  with_items:
  - git
  - automake
  - libtool
  - build-essential
  - bison
  - flex
  - libreadline-dev
  when: ansible_os_family == "Debian"
  sudo: yes

- name: ensure dependencies (RedHat)
  yum: name="@Development tools" state=present
  when: ansible_os_family == "RedHat"
  sudo: yes

- name: ensure dependencies (RedHat)
  yum: name={{item}} state=installed
  with_items:
  - git
  - automake
  - libtool
  - bison
  - flex
  - readline-devel
  when: ansible_os_family == "RedHat"
  sudo: yes

- name: clone postgres sources
  git: repo={{pg_repo}}
    dest={{pg_src}}
    version={{pg_version_tag}}
    depth=1
    accept_hostkey=True
  register: pg_sources

#############################################################################

- stat: path={{pg_datadir}}/postmaster.pid
  register: pg_pidfile

- name: stop postgres if it was running
  command: "{{pg_dst}}/bin/pg_ctl stop -w -D {{pg_datadir}}"
  when: pg_pidfile.stat.exists

- name: force rebuild on changed sources
  command: "rm -f {{pg_dst}}/bin/postgres"
  when: pg_sources.changed

- name: build and install
  shell: ./configure --prefix={{pg_dst}} --without-zlib && make clean && make -j {{makejobs}} && make install
  args:
    chdir: "{{pg_src}}"
    creates: "{{pg_dst}}/bin/postgres"

- name: remove datadirs on datanodes
  command: "rm -rf {{pg_datadir}}"
  when: pg_destroy_and_init

- name: create datadirs on datanodes
  command: "{{pg_dst}}/bin/initdb {{pg_datadir}}"
  args:
    creates: "{{pg_datadir}}"

- name: configure postgres on datanodes
  lineinfile:
    dest: "{{pg_datadir}}/postgresql.conf"
    line: "{{item.line}}"
    state: present
  with_items: "{{pg_config}}"

- name: configure postgres on datanodes -- 2
  lineinfile:
    dest: "{{pg_datadir}}/postgresql.conf"
    line: "{{item.line}}"
    state: present
  with_items: "{{pg_config_role}}"

- name: enable blind trust on datanodes
  lineinfile:
    dest: "{{pg_datadir}}/pg_hba.conf"
    line: "host all all 0.0.0.0/0 trust"

# - include: pg_shard.yml
#   when: deploy_pg_shard

- name: start postgrespro
  command: "{{pg_dst}}/bin/pg_ctl start -w -D {{pg_datadir}} -l {{pg_datadir}}/pg.log"



